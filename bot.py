import logging
import os
import asyncio
import nest_asyncio
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup, WebAppInfo
from telegram.ext import ApplicationBuilder, CommandHandler, ContextTypes
from dotenv import load_dotenv
from PIL import Image
# –†–∞–∑—Ä–µ—à–∞–µ–º –≤–ª–æ–∂–µ–Ω–Ω—ã–µ asyncio loop (–∞–∫—Ç—É–∞–ª—å–Ω–æ –ø—Ä–∏ –ø–æ–≤—Ç–æ—Ä–Ω–æ–º –∑–∞–ø—É—Å–∫–µ –≤ Jupyter –∏ —Ç.–ø.)
nest_asyncio.apply()

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ .env (–¥–ª—è –æ—Ç–¥–µ–ª—å–Ω–æ–≥–æ –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞ –±–µ–∑ Flask)
load_dotenv()

logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º Flask-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∏ –º–æ–¥–µ–ª—å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –ë–î –≤–Ω—É—Ç—Ä–∏ –±–æ—Ç–∞
from app import create_app, db
from app.models import User

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º Flask-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∏ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö (–¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ User –≤–Ω—É—Ç—Ä–∏ –±–æ—Ç–∞)
app = create_app()
app.app_context().push()


async def start(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    telegram_user = update.effective_user
    user = User.query.filter_by(telegram_id=telegram_user.id).first()

    # –ü–æ–ª—É—á–∞–µ–º —Å–≤–µ–∂–∏–µ —Ñ–æ—Ç–æ –ø—Ä–æ—Ñ–∏–ª—è
    photos = await context.bot.get_user_profile_photos(telegram_user.id)
    profile_photo_url = None
    if photos.total_count > 0:
        # –í—ã–±–∏—Ä–∞–µ–º –ø–µ—Ä–≤—ã–π –≤–∞—Ä–∏–∞–Ω—Ç –ø–µ—Ä–≤–æ–≥–æ —Ñ–æ—Ç–æ
        photo = photos.photos[0][0]
        file = await context.bot.get_file(photo.file_id)

        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø–∞–ø–∫—É –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∞–≤–∞—Ç–∞—Ä–∞ (app/static/uploads)
        uploads_dir = os.path.join("app", "static", "uploads")
        os.makedirs(uploads_dir, exist_ok=True)

        # –§–æ—Ä–º–∏—Ä—É–µ–º –∏–º—è —Ñ–∞–π–ª–∞, –Ω–∞–ø—Ä–∏–º–µ—Ä: avatar_452181463.jpg
        local_filename = os.path.join(uploads_dir, f"avatar_{telegram_user.id}.jpg")

        # –°–∫–∞—á–∏–≤–∞–µ–º —Ñ–∞–π–ª
        await file.download_to_drive(custom_path=local_filename)

        # –û—Ç–∫—Ä—ã–≤–∞–µ–º –∏ –∏–∑–º–µ–Ω—è–µ–º —Ä–∞–∑–º–µ—Ä –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–æ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–≥–æ (–Ω–∞–ø—Ä–∏–º–µ—Ä, —à–∏—Ä–∏–Ω–∞ 50px)
        try:
            with Image.open(local_filename) as im:
                width = 50
                w_percent = (width / float(im.size[0]))
                height = int((float(im.size[1]) * float(w_percent)))
                im_resized = im.resize((width, height), Image.ANTIALIAS)
                im_resized.save(local_filename)
        except Exception as e:
            # –ï—Å–ª–∏ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Ä–∞–∑–º–µ—Ä–∞, –ª–æ–≥–∏—Ä—É–µ–º –µ—ë –∏ –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Ä–∞–∑–º–µ—Ä–∞ –∞–≤–∞—Ç–∞—Ä–∞: {e}")

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω—ã–π –ø—É—Ç—å –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ —à–∞–±–ª–æ–Ω–µ (—Å—Ç–∞—Ç–∏—á–µ—Å–∫–∞—è –ø–∞–ø–∫–∞ app/static)
        profile_photo_url = f"uploads/avatar_{telegram_user.id}.jpg"

    if user:
        # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –æ–±–Ω–æ–≤–ª—è–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ –∞–≤–∞—Ç–∞—Ä, –µ—Å–ª–∏ –æ–Ω–∞ –∏–∑–º–µ–Ω–∏–ª–∞—Å—å
        if profile_photo_url and user.profile_photo_url != profile_photo_url:
            user.profile_photo_url = profile_photo_url
            db.session.commit()
        await update.message.reply_text(
            f"–ü—Ä–∏–≤–µ—Ç, {telegram_user.first_name}! –í—ã —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã."
        )
    else:
        # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —Å–æ—Ö—Ä–∞–Ω—è—è –∞–∫—Ç—É–∞–ª—å–Ω—ã–π –∞–≤–∞—Ç–∞—Ä
        user = User(
            telegram_id=telegram_user.id,
            username=telegram_user.username,
            first_name=telegram_user.first_name,
            last_name=telegram_user.last_name,
            language_code=telegram_user.language_code,
            profile_photo_url=profile_photo_url
        )
        db.session.add(user)
        db.session.commit()
        await update.message.reply_text(
            f"–ü—Ä–∏–≤–µ—Ç, {telegram_user.first_name}! –í—ã —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã."
        )

async def openweb(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    # –§–æ—Ä–º–∏—Ä—É–µ–º URL –¥–ª—è WebApp (—Å—Ç—Ä–∞–Ω–∏—Ü–∞ –ø—Ä–æ—Ñ–∏–ª—è)
    base_url = os.environ.get('NGROK_URL')
    if not base_url:
        logger.error("‚ùå NGROK_URL –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω! –ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –æ—Ç–∫—Ä—ã—Ç—å –º–∏–Ω–∏-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ.")
        await update.message.reply_text("–û—à–∏–±–∫–∞: URL –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω.")
        return
    webapp_url = base_url + "/profile"
    keyboard = [
        [InlineKeyboardButton(text="Open SeaScript WebApp", web_app=WebAppInfo(url=webapp_url))]
    ]
    await update.message.reply_text("–ù–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É, —á—Ç–æ–±—ã –æ—Ç–∫—Ä—ã—Ç—å WebApp:", reply_markup=InlineKeyboardMarkup(keyboard))
    logger.info(f"‚û°Ô∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ID={update.effective_user.id} –≤—ã–±—Ä–∞–ª –∫–æ–º–∞–Ω–¥—É /openweb (–æ—Ç–∫—Ä—ã—Ç–∏–µ WebApp)")

async def main():
    TOKEN = os.environ.get('TELEGRAM_BOT_TOKEN')
    if not TOKEN:
        logger.error("‚ùå TELEGRAM_BOT_TOKEN –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è! –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞.")
        return

    application = ApplicationBuilder().token(TOKEN).build()
    application.add_handler(CommandHandler("start", start))
    application.add_handler(CommandHandler("openweb", openweb))

    # –û–±–æ—Ä–∞—á–∏–≤–∞–µ–º –≤—ã–∑–æ–≤ delete_webhook –≤ try/except —Å —Ç–∞–π–º–∞—É—Ç–æ–º 10 —Å–µ–∫—É–Ω–¥
    try:
        await application.bot.delete_webhook(timeout=10)
    except Exception as e:
        logger.warning(f"–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å webhook: {e}")

    logger.info("ü§ñ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω. –û–∂–∏–¥–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π (polling)...")
    await application.run_polling()

if __name__ == '__main__':
    asyncio.run(main())
